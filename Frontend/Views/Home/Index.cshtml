@{
    ViewData["Title"] = "Home Page";
}

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <title>Banco Financeiro - Painel</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        // Tailwind config: modo escuro por classe + cor principal roxa
        tailwind.config = {
          darkMode: 'class',
          theme: {
            extend: {
              colors: {
                primary: {
                  50: '#faf5ff',
                  100: '#f3e8ff',
                  200: '#e9d5ff',
                  300: '#d8b4fe',
                  400: '#c084fc',
                  500: '#a855f7',
                  600: '#9333ea',
                  700: '#7e22ce',
                  800: '#6b21a8',
                  900: '#581c87'
                }
              }
            }
          }
        }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>
<body class="h-full bg-gray-50 dark:bg-gray-900 text-gray-800 dark:text-gray-100">
    <div class="min-h-screen flex flex-col">
        <!-- Header -->
        <header class="bg-white dark:bg-gray-800 shadow p-4">
            <div class="max-w-6xl mx-auto flex items-center justify-between">
                <div class="flex items-center gap-4">
                    <div class="w-10 h-10 rounded-full bg-primary-600 flex items-center justify-center text-white font-bold">BF</div>
                    <h1 class="text-xl font-semibold">Banco Financeiro</h1>
                </div>
                <nav class="flex items-center gap-3">
                    <button id="menu-extrato" class="nav-btn px-3 py-2 rounded hover:bg-gray-100 dark:hover:bg-gray-700">Extrato</button>
                    <button id="menu-transferencia" class="nav-btn px-3 py-2 rounded hover:bg-gray-100 dark:hover:bg-gray-700">Transferência</button>
                    <button id="menu-dados" class="nav-btn px-3 py-2 rounded hover:bg-gray-100 dark:hover:bg-gray-700">Dados do Usuário</button>
                    <button id="toggle-dark" class="ml-4 px-3 py-2 border rounded">Modo Escuro</button>
                </nav>
            </div>
        </header>

        <!-- Main -->
        <main class="flex-1 max-w-6xl mx-auto w-full p-6">
            <!-- Panels -->
            <section id="panel-extrato" class="panel">
                <div class="flex items-center justify-between mb-4">
                    <h2 class="text-2xl font-semibold">Extrato</h2>
                    <div class="flex gap-2 items-center">
                        <input id="extrato-userid" type="number" placeholder="ID do usuário" class="px-3 py-2 rounded border" value="1" />
                        <button id="btn-load-extrato" class="px-4 py-2 rounded bg-primary-600 text-white">Carregar</button>
                    </div>
                </div>

                <div class="mb-4 grid grid-cols-1 md:grid-cols-3 gap-3">
                    <input id="filter-text" type="text" placeholder="Filtrar por descrição/CPF/valor" class="px-3 py-2 rounded border" />
                    <input id="filter-start" type="date" class="px-3 py-2 rounded border" />
                    <input id="filter-end" type="date" class="px-3 py-2 rounded border" />
                </div>

                <div id="extrato-container" class="bg-white dark:bg-gray-800 rounded shadow p-4">
                    <div id="extrato-summary" class="mb-4 text-sm text-gray-600 dark:text-gray-300"></div>
                    <div class="overflow-x-auto">
                        <table id="extrato-table" class="min-w-full text-left table-auto">
                            <thead>
                                <tr class="text-xs uppercase text-gray-500 dark:text-gray-400">
                                    <th class="px-3 py-2">Data</th>
                                    <th class="px-3 py-2">Descrição</th>
                                    <th class="px-3 py-2">Valor</th>
                                    <th class="px-3 py-2">Tipo</th>
                                    <th class="px-3 py-2">Remetente</th>
                                    <th class="px-3 py-2">Recebedor</th>
                                </tr>
                            </thead>
                            <tbody id="extrato-tbody"></tbody>
                        </table>
                    </div>
                </div>
            </section>

            <section id="panel-transferencia" class="panel hidden">
                <h2 class="text-2xl font-semibold mb-4">Transferência</h2>
                <div class="bg-white dark:bg-gray-800 rounded shadow p-6 grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                        <label class="block text-sm mb-1">ID do usuário (remetente)</label>
                        <input id="tx-userid" type="number" class="w-full px-3 py-2 rounded border" value="1" />
                    </div>
                    <div>
                        <label class="block text-sm mb-1">CNPJ do recebedor</label>
                        <input id="tx-receiver-cnpj" type="text" placeholder="00.000.000/0000-00" class="w-full px-3 py-2 rounded border" />
                    </div>
                    <div>
                        <label class="block text-sm mb-1">Valor</label>
                        <input id="tx-valor" type="number" step="0.01" class="w-full px-3 py-2 rounded border" />
                    </div>
                    <div>
                        <label class="block text-sm mb-1">Tipo</label>
                        <select id="tx-tipo" class="w-full px-3 py-2 rounded border">
                            <option value="1">DEBITO</option>
                            <option value="2">CREDITO</option>
                            <option value="3">PIX</option>
                            <option value="4">TRANSFERENCIA</option>
                        </select>
                    </div>

                    <div class="md:col-span-2">
                        <label class="block text-sm mb-1">Descrição (opcional)</label>
                        <input id="tx-descricao" type="text" class="w-full px-3 py-2 rounded border" />
                    </div>

                    <div class="md:col-span-2 flex gap-3 items-center">
                        <button id="btn-send-tx" class="px-4 py-2 rounded bg-primary-600 text-white">Realizar Transação</button>
                        <div id="tx-result" class="flex-1 text-sm"></div>
                    </div>
                </div>
            </section>

            <section id="panel-dados" class="panel hidden">
                <h2 class="text-2xl font-semibold mb-4">Dados do Usuário</h2>
                <div class="bg-white dark:bg-gray-800 rounded shadow p-6 grid grid-cols-1 md:grid-cols-3 gap-4">
                    <div class="p-4 border rounded">
                        <h3 class="text-sm text-gray-500">Saldo Atual</h3>
                        <div id="user-saldo" class="text-3xl font-bold mt-2">R$ 0,00</div>
                    </div>
                    <div class="p-4 border rounded md:col-span-2">
                        <h3 class="text-sm text-gray-500">Dados Gerais</h3>
                        <div id="user-dados" class="mt-2 text-sm"></div>
                    </div>
                    <div class="p-4 border rounded md:col-span-3">
                        <h3 class="text-sm text-gray-500">Última Transação</h3>
                        <div id="user-ultima" class="mt-2 text-sm"></div>
                    </div>
                </div>
            </section>

        </main>

        <footer class="py-4 text-center text-sm text-gray-500">Banco Financeiro &copy; 2025</footer>
    </div>

    <script>
        // --- Helpers ---
        const $ = id => document.getElementById(id);
        const apiBase = 'https://localhost:7067';

        function formatCurrency(v){
          return new Intl.NumberFormat('pt-BR',{style:'currency',currency:'BRL'}).format(v);
        }
        function formatDate(iso){
          if(!iso) return '-';
          const d = new Date(iso);
          return d.toLocaleString('pt-BR');
        }

        // --- Panel navigation ---
        document.querySelectorAll('.nav-btn').forEach(btn => btn.addEventListener('click', e => {
          const id = e.target.id;
          if(id.includes('extrato')) showPanel('panel-extrato');
          if(id.includes('transferencia')) showPanel('panel-transferencia');
          if(id.includes('dados')) showPanel('panel-dados');
        }));

        function showPanel(panelId){
          document.querySelectorAll('.panel').forEach(p => p.classList.add('hidden'));
          $(panelId).classList.remove('hidden');
        }

        // Dark mode toggle
        const darkToggle = $('toggle-dark');
        darkToggle.addEventListener('click', ()=>{
          document.documentElement.classList.toggle('dark');
          darkToggle.textContent = document.documentElement.classList.contains('dark') ? 'Modo Claro' : 'Modo Escuro';
        });

        // --- Extrato ---
        let extratoData = [];
        async function loadExtrato(){
          const id = $('extrato-userid').value || 4;
          try{
            const res = await axios.get(`${apiBase}/DetalhesUsuario/${id}`);
            const payload = res.data;
            if(!payload || !payload.detalhesUsuario){
              $('extrato-summary').textContent = 'Resposta inválida da API.';
              return;
            }
            const det = payload.detalhesUsuario;
            extratoData = (det.transacao || []).map(t => ({...t, dataTransacao:new Date(t.dataTransacao)}));
            // sort desc by date
            extratoData.sort((a,b)=>b.dataTransacao - a.dataTransacao);
            $('extrato-summary').textContent = `Nome: ${det.nome} — CPF: ${det.cpf} — Saldo: ${formatCurrency(det.saldo)}`;
            renderExtratoTable();
            // update dados panel as well
            updateDadosPanel(det);
          }catch(err){
            console.error(err);
            $('extrato-summary').textContent = 'Erro ao carregar extrato. Verifique API.';
          }
        }

        function renderExtratoTable(){
          const tbody = $('extrato-tbody');
          const filterText = $('filter-text').value.toLowerCase();
          const start = $('filter-start').value ? new Date($('filter-start').value) : null;
          const end = $('filter-end').value ? new Date($('filter-end').value) : null;
          tbody.innerHTML = '';
          const rows = extratoData.filter(t=>{
            if(filterText){
              const inText = (t.descricao||'').toLowerCase().includes(filterText) || (t.usuarioId||'').toString().includes(filterText) || (t.usuarioRecebedorId||'').toString().includes(filterText) || (t.valor||'').toString().includes(filterText);
              if(!inText) return false;
            }
            if(start && t.dataTransacao < start) return false;
            if(end){
              const endDay = new Date(end); endDay.setHours(23,59,59,999);
              if(t.dataTransacao > endDay) return false;
            }
            return true;
          });

          if(rows.length === 0){
            tbody.innerHTML = '<tr><td class="px-3 py-2" colspan="6">Nenhuma transação encontrada.</td></tr>';
            return;
          }

          for(const t of rows){
            const tr = document.createElement('tr');
            tr.className = 'border-t';
            tr.innerHTML = `
              <td class="px-3 py-2">${formatDate(t.dataTransacao)}</td>
              <td class="px-3 py-2">${t.descricao || '-'}</td>
              <td class="px-3 py-2">${formatCurrency(t.valor)}</td>
              <td class="px-3 py-2">${mapTipo(t.tipoTransacao)}</td>
              <td class="px-3 py-2">${t.usuarioId ?? '-'}</td>
              <td class="px-3 py-2">${t.usuarioRecebedorId ?? '-'}</td>
            `;
            tbody.appendChild(tr);
          }
        }

        function mapTipo(v){
          switch(v){
            case 1: return 'DEBITO';
            case 2: return 'CREDITO';
            case 3: return 'PIX';
            case 4: return 'TRANSFERENCIA';
            default: return v;
          }
        }

        $('btn-load-extrato').addEventListener('click', loadExtrato);
        $('filter-text').addEventListener('input', renderExtratoTable);
        $('filter-start').addEventListener('change', renderExtratoTable);
        $('filter-end').addEventListener('change', renderExtratoTable);

        // --- Transferência ---
        $('btn-send-tx').addEventListener('click', async ()=>{
          const usuarioId = parseInt($('tx-userid').value || '0');
          const valor = parseFloat($('tx-valor').value || '0');
          const tipo = parseInt($('tx-tipo').value);
          const descricao = $('tx-descricao').value || null;
          const cnpj = $('tx-receiver-cnpj').value || null;

          const payload = {
            usuarioId: usuarioId,
            valor: valor,
            tipoTransacao: tipo,
            dataTransacao: new Date().toISOString(),
            descricao: descricao,
            usuarioRecebedorCnpj: cnpj
          };

          $('tx-result').textContent = 'Enviando...';
          try{
            const res = await axios.post(`${apiBase}/EfetuarTransacao`, payload);
            $('tx-result').innerHTML = `<span class="text-green-600 dark:text-green-400">Sucesso: ${JSON.stringify(res.data)}</span>`;
            // reload extrato and dados if same user
            if(parseInt($('extrato-userid').value) === usuarioId) loadExtrato();
          }catch(err){
            console.error(err);
            const msg = err?.response?.data ? JSON.stringify(err.response.data.mensagem) : (err.message || 'Erro');
            $('tx-result').innerHTML = `<span class="text-red-600 dark:text-red-400">Falha: ${msg}</span>`;
          }
        });

        // --- Dados do usuário ---
        function updateDadosPanel(detalhesUsuario){
          if(!detalhesUsuario) return;
          $('user-saldo').textContent = formatCurrency(detalhesUsuario.saldo || 0);
          const dadosHtml = `
            <div><strong>Nome:</strong> ${detalhesUsuario.nome}</div>
            <div><strong>CPF:</strong> ${detalhesUsuario.cpf}</div>
            <div><strong>AgênciaId:</strong> ${detalhesUsuario.agenciaId}</div>
          `;
          $('user-dados').innerHTML = dadosHtml;

          const last = (detalhesUsuario.transacao || []).slice().sort((a,b)=> new Date(b.dataTransacao) - new Date(a.dataTransacao))[0];
          if(last){
            $('user-ultima').innerHTML = `${formatDate(last.dataTransacao)} — ${last.descricao || '-'} — ${formatCurrency(last.valor)}`;
          }else{
            $('user-ultima').textContent = 'Nenhuma transação registrada.';
          }
        }

        // Initialize
        showPanel('panel-extrato');
        // optional: preload extrato for default id
        // loadExtrato();
    </script>
</body>

